/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package recipetherapy;

import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import java.util.regex.Matcher;
import javax.swing.JOptionPane;

/**
 *
 * @author JKA
 */
public class SignUpForm extends javax.swing.JFrame {

    myDBCon dbCon;
    ResultSet rs;
    boolean isAdmin;
    
    public SignUpForm(int type) {
        initComponents();
        this.setLocationRelativeTo(null);
        
        if(type == 0){
            jLabel1.setText("Add User");           
            userTypeComboBox.setVisible(true);
            lblUserType.setVisible(true);
            SignUpButton.setText("Create User");
        }else{
            jLabel1.setText("Sign Up");
            userTypeComboBox.setVisible(false);
            lblUserType.setVisible(false);
            SignUpButton.setText("Sign Up");
        }
        
            
        
        
        dbCon = new myDBCon();
        lblUsernameError.setVisible(false);
        lblPasswordError.setVisible(false);
        lblConfirmPasswordError.setVisible(false);
        lblNameError.setVisible(false);
        lblEmailError.setVisible(false);
        lblPhoneNumberError.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        lblConfirmPassword = new javax.swing.JLabel();
        lblPhoneNumber = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        txtConfirmPassword = new javax.swing.JPasswordField();
        txtPhoneNo = new javax.swing.JTextField();
        SignUpButton = new javax.swing.JButton();
        txtEmail = new javax.swing.JTextField();
        lblUsernameError = new javax.swing.JLabel();
        lblNameError = new javax.swing.JLabel();
        lblPasswordError = new javax.swing.JLabel();
        lblEmailError = new javax.swing.JLabel();
        lblConfirmPasswordError = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblPhoneNumberError = new javax.swing.JLabel();
        ShowPassCheckBox = new javax.swing.JCheckBox();
        userTypeComboBox = new javax.swing.JComboBox<>();
        lblUserType = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Sign Up Page");

        jPanel1.setBackground(new java.awt.Color(222, 232, 250));

        jLabel1.setFont(new java.awt.Font("Serif", 1, 36)); // NOI18N
        jLabel1.setBounds(50,50,3,30);
        jLabel1.setText("Sign Up");

        lblUsername.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        lblUsername.setText("Username:");

        lblEmail.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        lblEmail.setText("Email:");

        lblPassword.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        lblPassword.setText("Password:");

        lblConfirmPassword.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        lblConfirmPassword.setText("Confirm Password:");

        lblPhoneNumber.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        lblPhoneNumber.setText("Phone Number:");

        txtUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsernameActionPerformed(evt);
            }
        });

        txtPhoneNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhoneNoActionPerformed(evt);
            }
        });

        SignUpButton.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        SignUpButton.setForeground(new java.awt.Color(0, 0, 0));
        SignUpButton.setText("Sign Up");
        SignUpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignUpButtonActionPerformed(evt);
            }
        });

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        lblUsernameError.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        lblUsernameError.setForeground(new java.awt.Color(255, 0, 0));
        lblUsernameError.setText("error label");

        lblNameError.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        lblNameError.setForeground(new java.awt.Color(255, 0, 0));
        lblNameError.setText("error label");

        lblPasswordError.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        lblPasswordError.setForeground(new java.awt.Color(255, 0, 0));
        lblPasswordError.setText("error label");

        lblEmailError.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        lblEmailError.setForeground(new java.awt.Color(255, 0, 0));
        lblEmailError.setText("error label");

        lblConfirmPasswordError.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        lblConfirmPasswordError.setForeground(new java.awt.Color(255, 0, 0));
        lblConfirmPasswordError.setText("error label");

        lblName.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        lblName.setText("Name:");

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        lblPhoneNumberError.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        lblPhoneNumberError.setForeground(new java.awt.Color(255, 0, 0));
        lblPhoneNumberError.setText("error label");

        ShowPassCheckBox.setBackground(new java.awt.Color(204, 255, 255));
        ShowPassCheckBox.setText("Show Password");
        ShowPassCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowPassCheckBoxActionPerformed(evt);
            }
        });

        userTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1" }));

        lblUserType.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        lblUserType.setText("User Type:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(171, 171, 171))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(lblPhoneNumber))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblUsername, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblName, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblEmail, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblPassword, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblConfirmPassword, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblUserType, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ShowPassCheckBox)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(userTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SignUpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 25, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtConfirmPassword, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                                    .addComponent(txtPassword, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtEmail, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtUsername, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtName, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPhoneNo))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblConfirmPasswordError, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                            .addComponent(lblPasswordError, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblEmailError, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblUsernameError, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblNameError, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblPhoneNumberError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(44, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNameError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUsername)
                    .addComponent(lblUsernameError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmail)
                    .addComponent(lblEmailError))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(lblConfirmPassword)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblPasswordError))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblConfirmPasswordError))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPhoneNo, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPhoneNumber)
                            .addComponent(lblPhoneNumberError))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SignUpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUserType))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ShowPassCheckBox)
                .addGap(35, 35, 35))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    
    void clearErrorLabels() {
        // erase error label text and set visibility to false
        lblNameError.setText("");
        lblNameError.setVisible(false);
        lblUsernameError.setText("");
        lblUsernameError.setVisible(false);
        lblPasswordError.setText("");
        lblPasswordError.setVisible(false);
        lblConfirmPasswordError.setText("");
        lblConfirmPasswordError.setVisible(false);
        lblEmailError.setText("");
        lblEmailError.setVisible(false);
        lblPhoneNumberError.setText("");
        lblPhoneNumberError.setVisible(false);
        
    }
    
    
    void clearInputBoxes(){
        txtName.setText("");
        txtUsername.setText("");
        txtPassword.setText("");
        txtConfirmPassword.setText("");
        txtEmail.setText("");
        txtPhoneNo.setText("");
    }
    
    boolean isValidPassword() {
        // check validity of the password value entered by the user based on your design 
        boolean result = ((txtPassword.getText().trim().length() < 32) 
                && txtPassword.getText().trim().equals(txtConfirmPassword.getText().trim()) 
                && !txtPassword.getText().trim().isEmpty());
        
        return result;
    }
    
    boolean isValidData(){
        clearErrorLabels();
        
        boolean result = true;
        
        //check password
        if (!isValidPassword()){
            if ((txtPassword.getText().trim().length() > 32)) { 
                lblPasswordError.setText("Invalid. Cannot be more than 32 chars.");
                lblPasswordError.setVisible(true);
            }
            else if (!txtPassword.getText().trim().equals(txtConfirmPassword.getText().trim())) { 
                lblConfirmPasswordError.setText("Invalid. Must match password.");
                lblConfirmPasswordError.setVisible(true);
            }
            result = false;
        }
        
        //check username
        if(txtUsername.getText().trim().length() >25){
            lblUsernameError.setText("cant be more than 25 chars");
            lblUsernameError.setVisible(true);
            result = false;
        }
        
        //check Name
        if(txtName.getText().trim().length() >25){
            lblNameError.setText("can't be more than 25 chars");
            lblNameError.setVisible(true);
            result = false;
        }   
        
        //check Email
        String emailPattern = "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$";
        Pattern pattern = Pattern.compile(emailPattern);
        Matcher matcher = pattern.matcher(txtEmail.getText().trim());
        if(!matcher.matches()){
            lblEmailError.setText("Invalid email format");
            lblEmailError.setVisible(true);
            result = false;
        }
        
        //check Phone Number
        if(txtPhoneNo.getText().trim().length() > 15){
            lblPhoneNumberError.setText("Enter a valid phone number");
            lblPhoneNumberError.setVisible(true);
            result = false;
        }
        
        return result;
    }
    
    private boolean isDuplicate(String username) throws SQLException {
        boolean isduplicate = false;
        //setting up the query to get all usernames from loginusers table
        String stmtSQL = "SELECT username FROM \"User\" WHERE username = '" + txtUsername.getText().trim() + "'";
        rs = dbCon.executeStatement(stmtSQL);
        // isBeforeFirst() returns false if there are no data in the resultset
        isduplicate = rs.isBeforeFirst();
        return isduplicate;
    }
    
    private void txtUsernameActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void txtPhoneNoActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void SignUpButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
        
        
        String userType = (isAdmin) ? (userTypeComboBox.getSelectedItem().toString()) : "1";
        try {
            //Validate the data entered before signing up the user
            if(isValidData() && !isDuplicate(txtUsername.getText().trim())){  
                try {
                    //make id auto increment
                    String prepSQL = "INSERT INTO \"User\" (username, password, name, email, user_type, Phone_number) VALUES ('"                          
                            + txtUsername.getText().trim() + "', '"
                            + encrypt(txtPassword.getText().trim()) + "', '"
                            + txtName.getText().trim() + "', '"
                            + txtEmail.getText().trim() + "',"
                            + userType + ", '"
                            + txtPhoneNo.getText().trim()
                            + "')";
                    
                    int result = dbCon.executePrepared(prepSQL);
                    if (result > 0) {// if result > 0 means the statement has been executed succesfully
                        javax.swing.JLabel label = new javax.swing.JLabel("New User added successfully.");
                        label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                        JOptionPane.showMessageDialog(null, label, "SUCCESS", JOptionPane.INFORMATION_MESSAGE);
                        clearInputBoxes();
                        
                    }else {}
                    
                    rs.close();
                    
                } catch (NoSuchAlgorithmException ex) {
                    Logger.getLogger(SignUpForm.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                
                
                
                
            }else{
               JOptionPane.showMessageDialog(null, "Error Signing Up: Invalid data or username already exists.");
           }  
            
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error Adding User.");
        }
    }                                            

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    }                                       

    private void ShowPassCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        // TODO add your handling code here:
        if(ShowPassCheckBox.isSelected()){
            txtPassword.setEchoChar((char) 0);
            txtConfirmPassword.setEchoChar((char) 0);
        }else{
            txtPassword.setEchoChar('*');
            txtConfirmPassword.setEchoChar('*');
        }
    }                                                


    private String encrypt(String pass) throws NoSuchAlgorithmException {
        try{
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] hashedpassword = md.digest(pass.getBytes());
            StringBuilder sb = new StringBuilder();
            
            for (byte b : hashedpassword) {
                sb.append(String.format("%02x", b));
            }
            return sb.toString();
        }catch(NoSuchAlgorithmException e) {
            e.printStackTrace();
            return null;
        }
    }

    // Variables declaration - do not modify                     
    private javax.swing.JCheckBox ShowPassCheckBox;
    private javax.swing.JButton SignUpButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblConfirmPassword;
    private javax.swing.JLabel lblConfirmPasswordError;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEmailError;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblNameError;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPasswordError;
    private javax.swing.JLabel lblPhoneNumber;
    private javax.swing.JLabel lblPhoneNumberError;
    private javax.swing.JLabel lblUserType;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JLabel lblUsernameError;
    private javax.swing.JPasswordField txtConfirmPassword;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtPhoneNo;
    private javax.swing.JTextField txtUsername;
    private javax.swing.JComboBox<String> userTypeComboBox;
    // End of variables declaration                   
}